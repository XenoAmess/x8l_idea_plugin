{
  parserClass="com.xenoamess.x8l.idea_plugin.parser.X8lParser"
  parserUtilClass="com.xenoamess.x8l.idea_plugin.parser.X8lParserUtil"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="X8l"
  psiImplClassSuffix="Impl"
  psiPackage="com.xenoamess.x8l.idea_plugin.psi"
  psiImplPackage="com.xenoamess.x8l.idea_plugin.psi.impl"

  elementTypeHolderClass="com.xenoamess.x8l.idea_plugin.psi.X8lTypes"
  elementTypeClass="com.xenoamess.x8l.idea_plugin.psi.X8lElementType"
  tokenTypeClass="com.xenoamess.x8l.idea_plugin.psi.X8lTokenType"

  psiImplUtilClass="com.xenoamess.x8l.idea_plugin.psi.impl.X8lPsiImplUtil"
}

//simpleFile ::= item_*
//
//private item_ ::= (property|COMMENT|CRLF)
//
//property ::= (KEY? SEPARATOR VALUE?) | KEY {
//  mixin="com.xenoamess.x8l.idea_plugin.psi.impl.X8lNamedElementImpl"
//  implements="com.xenoamess.x8l.idea_plugin.psi.X8lNamedElement"
//  methods=[getKey getValue getName setName getNameIdentifier getPresentation]
//}

//x8lFile ::= CONTENT_NODE_CHILDREN_AREA
//CONTENT_NODE_CHILDREN_AREA ::= (TEXT_NODE (COMMENT_NODE|CONTENT_NODE))* TEXT_NODE
//CONTENT_NODE ::= LEFT_BRACKET CONTENT_NODE_HEAD_AREA RIGHT_BRACKET CONTENT_NODE_CHILDREN_AREA RIGHT_BRACKET
//CONTENT_NODE_HEAD_AREA ::= CONTENT_NODE_ATTRIBUTE*
//CONTENT_NODE_ATTRIBUTE ::= (KEY SEPARATOR VALUE) | KEY {
//    implements="com.intellij.psi.PsiNameIdentifierOwner"
//    methods=[getKey getValue getName setName getNameIdentifier getPresentation]
//}
//COMMENT_NODE ::= '<<' TEXT_STRING? '>' {
//    implements="com.intellij.psi.PsiComment"
//    methods=[getTokenType]
//}
//TEXT_NODE ::= TEXT_STRING? {
//    implements="com.intellij.psi.PsiLiteral"
//    methods=[getValue getPresentation]
//}
//LEFT_BRACKET ::= '<'
//RIGHT_BRACKET ::= '>'

x8lFile ::= CONTENT_NODE_CHILDREN_AREA
CONTENT_NODE_CHILDREN_AREA ::= (TEXT_NODE (COMMENT_NODE|CONTENT_NODE))* TEXT_NODE
CONTENT_NODE ::= LEFT_BRACKET CONTENT_NODE_HEAD_AREA RIGHT_BRACKET CONTENT_NODE_CHILDREN_AREA RIGHT_BRACKET
CONTENT_NODE_HEAD_AREA ::= CONTENT_NODE_ATTRIBUTE*
CONTENT_NODE_ATTRIBUTE ::= (KEY SEPARATOR VALUE) | KEY {
    implements="com.intellij.psi.PsiNameIdentifierOwner"
    methods=[getKey getValue getName setName getNameIdentifier getPresentation]
}

COMMENT_NODE ::= COMMENT_NODE_LEFT_BRACKET COMMENT_NODE_CONTENT COMMENT_NODE_RIGHT_BRACKET {
    implements=["com.intellij.psi.PsiComment" "com.intellij.psi.PsiLiteral"]
    methods=[getTokenType getValue getPresentation]
}

TEXT_NODE ::= TEXT_NODE_CONTENT {
    implements="com.intellij.psi.PsiLiteral"
    methods=[getValue getPresentation]
}

TEXT_NODE_CONTENT ::= TEXT_NODE_CONTENT_STRING?

COMMENT_NODE_CONTENT ::= COMMENT_NODE_CONTENT_STRING?
